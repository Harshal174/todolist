<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ToDoList</title>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="css/styles.css">
</head>
<body>
     <!-- Navbar with hamburger button -->
     <div class="navbar">
        <span class="hamburger" onclick="toggleSidebar()">&#9776;</span>
        <h1><%=listTitle%></h1>
        
        <div class="profile-image-container">
          <i class="fas fa-user-circle"></i>
          <!-- <img src="image.jpg" alt="User Profile" class="profile-image" id="profileImage"> -->
        </div>  
        <button class="help-btn" style="right: 80px; padding: 0;" onclick="openHelpModal()"><i class="fas fa-question-circle"></i></button>
      
    </div>
     <!-- Help Modal -->
<div id="helpModal" class="modal">
  <div class="modal-content">
    <span class="close" onclick="closeHelpModal()">&times;</span>
    <!-- <h2>Help Information</h2>
    <p id="help-info">Here you can add information later, such as guidelines or tips for the user.</p> -->
    <div id="popup" class="hidden absolute z-10 w-64 p-4 bg-card text-card-foreground border border-border rounded-lg shadow-lg">
      <h3 class="font-bold mb-2">Keyboard Shortcuts</h3>
      <div class="mb-4">
        <h4 class="font-semibold">Navigation</h4>
        <ul class="list-disc list-inside">
          <li>Focus previous: Up</li>
          <li>Focus next: Down</li>
          <li>Focus first: Home</li>
          <li>Focus last: End</li>
        </ul>
      </div>
      <div>
        <h4 class="font-semibold">Task actions</h4>
        <ul class="list-disc list-inside">
          <li>Create: C</li>
          <li>Mark complete/incomplete: Space</li>
          <li>Edit: Return, Enter</li>
          <li>Delete: Backspace, Delete</li>
          <li>Move task up/down: Ctrl+Up/Down</li>
          <li>Move task to top/bottom: Ctrl+Shift+Up/Down</li>
          <li>Indent: Ctrl + ]</li>
          <li>Unindent: Ctrl + [</li>
        </ul>
      </div>
    </div>
  </div>
</div>
    <!-- Sidebar -->
<div id="sidebar" class="sidebar">
  <a href="javascript:void(0)" class="close-btn" onclick="toggleSidebar()">&times;</a>
  <button class="sidebar-btn create-btn" onclick="openListModal()">
      &#43; Create List
  </button>
  <button class="sidebar-btn"><i class="fas fa-check-circle"></i> All Tasks</button>
  <button class="sidebar-btn"><i class="fas fa-star"></i> Starred</button>
  <button class="sidebar-btn"><i class="fas fa-calendar"></i> Today's Tasks</button>
  <button id="logout-btn" class="sidebar-btn" onclick="logOut()">
      <span class="material-icons">exit_to_app</span> Logout
  </button>
</div>

<!-- Modal for Creating a New List -->
<div id="listModal" class="modal">
  <div class="modal-content">
      <span class="close-btn" onclick="closeListModal()">&times;</span>
      <h2>Create New List</h2>
      <form id="listForm" action="/createList" method="post">
          <label for="listName">List Name:</label>
          <input type="text" id="listName" name="listName" placeholder="Enter list name" required>

          <h3>Add Tasks</h3>
          <div id="tasksContainer">
              <div class="task-item">
                  <label for="taskName">Task Name:</label>
                  <input type="text" name="taskName" placeholder="Task Name" required>

                  <label for="taskDate">Due Date:</label>
                  <input type="date" name="taskDate" required>

                  <label for="taskPriority">Priority:</label>
                  <select name="taskPriority" required>
                      <option value="High">High</option>
                      <option value="Intermediate">Intermediate</option>
                      <option value="Low">Low</option>
                  </select>
              </div>
          </div>
          <button type="button" onclick="addTask()">Add Another Task</button>

          <button type="submit">Create List</button>
      </form>
  </div>
</div>

    <div class="box">
      <h1 id="heading"><%= listTitle %></h1>
        <% newListItems.forEach(function(item){ %>
            <div class="item">
              
              <!-- Task name -->
              <p><%= item.name %></p>
              
              <!-- Three-dotted button for dropdown options (Edit, Complete, Delete) -->
              <div class="dropdown">
                <button class="dropdown-btn">â‹®</button> <!-- Three dots button -->
                <div class="dropdown-content">
                  <!-- Edit option (Implement link/action for editing here) -->
                  <a href="#">Edit</a>
                  <!-- Completed option -->
                  <a href="#" onclick="markCompleted('<%= item._id %>','<%= listTitle %>')">Completed</a>
                  <!-- Delete option -->
                  <a href="#" onclick="deleteItem('<%= item._id %>','<%= listTitle %>')">Delete</a>
                </div>
              </div>
            </div>
          <% }) %>
        
          <!-- Add a new task field with a three-dotted option on the right -->
          
          <!-- Completed tasks link -->
          <a class="completed-tag" style="text-decoration: none;" href="/complete/<%= listTitle %>">Completed Tasks</a>
        
    </div>
    <script>
      // Toggle Sidebar
      function toggleSidebar() {
          var sidebar = document.getElementById("sidebar");
          if (sidebar.style.width === "250px") {
              sidebar.style.width = "0";
          } else {
              sidebar.style.width = "250px";
          }
      }
  
      // Open and Close List Modal
      function openListModal() {
          document.getElementById("listModal").style.display = "block";
      }
  
      function closeListModal() {
          document.getElementById("listModal").style.display = "none";
      }
  
      // Close the modal when clicking outside the modal content
      window.onclick = function(event) {
          var listModal = document.getElementById("listModal");
          var helpModal = document.getElementById("helpModal");
          if (event.target == listModal) {
              listModal.style.display = "none";
          }
          if (event.target == helpModal) {
              helpModal.style.display = "none";
          }
      }
  
      // Function to mark an item as completed
      function markCompleted(itemId, listTitle) {
          var form = document.createElement('form');
          form.method = 'post';
          form.action = '/complete/' + listTitle; // Route to mark as completed
  
          var inputId = document.createElement('input');
          inputId.type = 'hidden';
          inputId.name = 'completedCheckbox';
          inputId.value = itemId;
          form.appendChild(inputId);
  
          document.body.appendChild(form);
          form.submit(); // Submit form to complete task
      }
  
      // Function to delete a task
      function deleteItem(itemId, listTitle) {
          var form = document.createElement('form');
          form.method = 'post';
          form.action = '/delete'; // Route to delete task
  
          var inputId = document.createElement('input');
          inputId.type = 'hidden';
          inputId.name = 'checkbox';
          inputId.value = itemId;
          form.appendChild(inputId);
  
          var inputName = document.createElement('input');
          inputName.type = 'hidden';
          inputName.name = 'listTitle';
          inputName.value = listTitle;
          form.appendChild(inputName);
  
          document.body.appendChild(form);
          form.submit(); // Submit form to delete task
      }
  
      // Help Modal Functions
      function openHelpModal() {
          document.getElementById("helpModal").style.display = "block";
      }
  
      function closeHelpModal() {
          document.getElementById("helpModal").style.display = "none";
      }
  
      // Logout Function
      function logOut(){
          var form = document.createElement('form');
          form.method = 'post';
          form.action = '/logout';
          document.body.appendChild(form);
          form.submit();
      }
  
      // Add Task Dynamically in List Modal
      function addTask() {
          var tasksContainer = document.getElementById("tasksContainer");
  
          var taskDiv = document.createElement('div');
          taskDiv.classList.add('task-item');
  
          taskDiv.innerHTML = `
              <label for="taskName">Task Name:</label>
              <input type="text" name="taskName" placeholder="Task Name" required>
  
              <label for="taskDate">Due Date:</label>
              <input type="date" name="taskDate" required>
  
              <label for="taskPriority">Priority:</label>
              <select name="taskPriority" required>
                  <option value="High">High</option>
                  <option value="Intermediate">Intermediate</option>
                  <option value="Low">Low</option>
              </select>
              <button type="button" onclick="removeTask(this)">Remove Task</button>
          `;
  
          tasksContainer.appendChild(taskDiv);
      }
  
      // Remove Task Dynamically
      function removeTask(button) {
          var taskItem = button.parentElement;
          taskItem.remove();
      }
  
      // Function to open Task Modal for Editing
      function openTaskModal(id = '', name = '', date = '', priority = 'Medium') {
          document.getElementById("taskModal").style.display = "block";
          document.getElementById('modal-title').innerText = id ? 'Edit Task' : 'Add a New Task';
  
          // If editing, pre-fill the form fields
          document.getElementById('taskId').value = id;
          document.getElementById('taskName').value = name;
          document.getElementById('taskDate').value = date;
          document.getElementById('taskPriority').value = priority;
      }
  
      // Close Task Modal
      function closeTaskModal() {
          document.getElementById("taskModal").style.display = "none";
      }
  
      // Handle Form Submission for Task Modal
      function submitTask(event) {
          event.preventDefault(); // Prevent form from submitting traditionally
  
          const form = document.getElementById('taskForm');
          const taskId = form.taskId.value;
          const taskName = form.taskName.value;
          const taskDate = form.taskDate.value;
          const taskPriority = form.taskPriority.value;
  
          const formData = new FormData();
          formData.append('name', taskName);
          formData.append('date', taskDate);
          formData.append('priority', taskPriority);
  
          if (taskId) {
              formData.append('id', taskId); // For editing, pass the task ID
              formData.append('_method', 'PUT'); // Indicate it's an edit request
          }
  
          fetch('/tasks', {
              method: taskId ? 'PUT' : 'POST', // POST for new task, PUT for edit
              body: formData
          }).then(() => {
              closeTaskModal();
              location.reload(); // Refresh the page to show updated task
          });
      }
  </script>
  
</body>
</html>